type Token @entity {
  id: ID!
  contractAddress: Bytes!
  name: String!
  symbol: String!
  balances: [TokenBalance!] @derivedFrom(field: "token")
  createdAt: BigInt!
  supply: BigInt
}

type TokenBalance @entity {
  id: ID!
  amount: BigInt!
  token: Token!
  owner: Account!
}

type Account @entity {
  id: ID!
  address: Bytes!
  tokenBalances: [TokenBalance!] @derivedFrom(field: "owner")
  games: [Game!] @derivedFrom(field: "owner")
  lootboxes: [Lootbox!] @derivedFrom(field: "owner")
  items: [ItemBalance!] @derivedFrom(field: "owner")
  unopenedLootboxes: [LootboxEntry!] @derivedFrom(field: "owner")
  orders: [Order!] @derivedFrom(field: "owner")
}

type Game @entity {
  id: ID!
  contractAddress: Bytes!
  owner: Account!
  gameManagerContractAddress: Bytes!
  items: [Item!] @derivedFrom(field: "game")
  itemsCount: BigInt
  uri: String!
}

type ItemBalance @entity {
  id: ID!
  item: Item!
  owner: Account!
  amount: BigInt
}

type Item @entity {
  id: ID!
  game: Game!
  gameItemId: BigInt
  currentSupply: BigInt
  maxSupply: BigInt
  creatorAddress: Bytes!
  balances: [ItemBalance!] @derivedFrom(field: "item")
  recipes: [RecipeEntry!] @derivedFrom(field: "item")
  orders: [Order!] @derivedFrom(field: "item")
}

type RecipeEntry @entity {
  id: ID!
  recipe: Recipe!
  item: Item!
  amount: BigInt
  isMaterial: Boolean
}

type Recipe @entity {
  id: ID!
  contractId: BigInt!
  recipeId: BigInt!
  items: [RecipeEntry!] @derivedFrom(field: "recipe")
  isActive: Boolean
  token: Token
  cost: BigInt
  craftedCount: BigInt
}

type LootboxReward @entity {
  id: ID!
  lootbox: Lootbox!
  item: Item!
  amount: BigInt
  rarity: Int
  active: Boolean
}

type LootboxMaterial @entity {
  id: ID!
  lootbox: Lootbox!
  item: Item!
  requiredAmount: BigInt
  multiplier: BigInt
  active: Boolean
}

type LootboxEntry @entity {
  id: ID!
  owner: Account!
  lootbox: Lootbox!
  amount: BigInt
}

type Lootbox @entity {
  id: ID!
  owner: Account!
  contractAddress: Bytes!
  tradeInMinimum: BigInt
  minted: BigInt
  opened: BigInt
  materials: [LootboxMaterial!] @derivedFrom(field: "lootbox")
  rewards: [LootboxReward!] @derivedFrom(field: "lootbox")
  lootboxEntries: [LootboxEntry!] @derivedFrom(field: "lootbox")
}

type Order @entity {
  id: ID!
  owner: Account!
  item: Item!
  amountForSale: BigInt
  amountEscrowed: BigInt
  amountSold: BigInt
  token: Token!
  price: BigInt
  isBid: Boolean
  isClaimable: Boolean
  isCancelled: Boolean
  isFilled: Boolean
  createdAt: BigInt
  orderFilledAt: BigInt
  lastClaimedAt: BigInt
  cancelledAt: BigInt
}